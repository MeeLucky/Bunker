package com.example.bunker;

import java.util.ArrayList;
import java.util.Random;

public class Data {
    //представляет данные для создания карт
    static Random rand = new Random();
    public static String getDisaster() {
        String[] disasters = new String[] {
                "Из-за глобального потепления растают все полярные и континентальные льды, суши стало в 2 раза меньше, вода поглотит всё вокруг, после выхода из бункера произошло нарушение климата тропики теперь повсюду, необходимо приспособиться к новым видам растений и крупным насекомым, остаток населения земли - люди в бункерах, в бункере придётся жить 1 год",
                "Из-за глобального похолодания ледники захватили 30% суши у берегов, а вечная метель замела города до неузноваймости, долгая низка температура загубила большенство растительности, остаток населения земли - возможно люди в бункерах",
                "Их-за ядерной войны, подавляющая часть человечества погибла, остальные укрылись в бункерах, из-за радиации сильно изменилась почва, загрязнились водоёмы, а ранее знакомые живые организмы мутировали в опасных тварей, в бункере придётся жить 5 лет",
        };
        return disasters[rand.nextInt(disasters.length)];
    }

    public static String getBunker() {
        String room = "", item = "";//дебаф
//Todo: комнаты бункера
        int roomsCount = (rand.nextInt(5) - 2);
        if(roomsCount > 0) {
            String[] rooms = new String[] {
                    "мед. кабинет",
                    "склад с оружием",
                    "мастерская",
                    "лаболатория",
                    "гараж с машиной",
                    "библиотека",
                    "кухня",
                    "отдельные спальни для каждого человека",
                    "склад для продуктов"
            };
            ArrayList<Integer> roomsHistory = new ArrayList<>();
            for(int i = 0; i < roomsCount; i++) {
                int n = rand.nextInt(rooms.length);
                if(roomsHistory.indexOf(n) == -1) {
                    roomsHistory.add(n);
                    room += rooms[n] + ", ";
                } else {
                    i--;
                }
            }
        }
//Todo: предметы бункер
        int itemsCount = rand.nextInt(5) - 2;
        if(itemsCount > 0) {
            String[] items = new String[]{
                    "аптечка",
                    "удочка",
                    "пистолет",
                    "карта местности",
                    "компьютер",
                    "мини электростанция",
                    "топор",
                    "телевизор и 500 фильмов",
                    "нож",
                    "лук со стрелами",
                    "пара раций",
                    "гаечный ключ",
                    "набор инструментов"
            };
            for (int i = 0; i < itemsCount; i++) {
                item += items[rand.nextInt(items.length)] + ", ";
            }
        }
        String[] size = new String[] {
                "50", "50",  "50", "100", "100", "100", "300", "300", "500"
        };
        String str = "Основное отделение бункера составляет "+size[rand.nextInt(size.length)]+" квадратных метров"
                + ((!room.isEmpty() || !item.isEmpty() ? ", в бункере есть " : "")) + room + item;
        str = str.trim();
        if(str.charAt(str.length()-1) == ',') {
            str = str.substring(0, str.length()-1) + ".";
        } else {
            str += ".";
        }

        return str;
    }

    private String generalStringGetter(String what) {
        String[] arr;
        ArrayList<Integer> history;
        switch (what){
            case "profession":
                arr = professions;
                history = professionsHistory;
                break;
            case "phobia":
                arr = phobias;
                history = phobiasHistory;
                break;
            case "character":
                arr = characters;
                history = charactersHistory;
                break;
            case "health":
                arr = healthiest;
                history = healthiestHistory;
                break;
            case "baggage":
                arr = baggage;
                history = baggageHistory;
                break;
            case "hobby":
                arr = hobbies;
                history = hobbiesHistory;
                break;
            case "info":
                arr = info;
                history = infoHistory;
                break;
            case "skill":
                arr = skills;
                history = skillsHistory;
                break;
            default:
                return "Data.ERROR 1";
        }

        if(history.size() == arr.length)
            return "Data.ERROR 2";

        while(true) {
            int n = rand.nextInt(arr.length);
            if(history.indexOf(n) == -1) {
                history.add(n);

                if(what.equals("health")) {
                    return arr[n] +" "+ (rand.nextInt(10) * 10) +"%";
                }

                if(what.equals("info") && arr[n].equals("по 1 образованию ...")) {
                    return "по 1 образованию " + professions[rand.nextInt(professions.length)];
                }

                return arr[n];
            }
        }
    }

    private String[] professions = new String[] {
            "рыбак",
            "охотник",
            "механик",
            "порно актёр",
            "режисёр",
            "президент",
            "смм менеджер",
            "слесарь",
            "химик",
            "биолог",
            "медик",
            "военный",
            "строитель",
            "физик",
            "водитель",
            "программист",
            "парикмахер",
            "садовод",
            "политик",
            "сис. админ",
            "моряк",
            "учитель начальных классов",
            "пожарник",
            "военный-пилот",
            "полицейский",
            "формацефт",
            "историк",
            "садоваод",
            "фермер",
            "географ",
            "грузчик",
            "столяр",
            "плотник",
            "ремонтник",
            "шахтёр",
            "охраник",
            "психолог",
            "сексолог",
            "писатель",
            "маркетолог",
            "экономист",
            "фотограф",
            "био-физик",
            "астро-физик",
            "сантехник",
            "переводчик",
            "госслужащий",
            "пилот",
            "повар",
            "кондитер",
            "швея",
            "электрик",
            "инжинер",
            "художник",
            "вебкам модель",
            "блогер",
            "курьер",
            "ветеринар",
            "уборщик",
            "клоун",
            "агроном",
            "бармен"
    };
    private ArrayList<Integer> professionsHistory = new ArrayList<>();
    public String getProfession() { return generalStringGetter("profession"); }


    private String[] phobias  = new String[] {
            "нософобия – боязнь болезней",
            "алгофобия – боязнь боли",
            "ятрофобия – боязнь врачей",
            "рипофобия – боязнь грязи",
            "офидиофобия – боязнь змей",
            "эйсоптрофобия – боязнь зеркала",
            "гематофобия – боязнь крови",
            "фелинофобия – боязнь кошек",
            "энтомофобия – боязнь насекомых",
            "спермофобия – боязнь микробов",
            "атихифобия – боязнь неудачи",
            "полициофобия – боязнь полиции",
            "копрофобия – боязнь фекалий",
            "авиафобия – боязнь полетов",
            "охлофобия – боязнь толпы",
            "трипанофобия – боязнь уколов",
            "аквафобия – боязнь утопления",
            "аэтатемофобия – боязнь старения",
            "ахлуофобия – боязнь темноты",
            "клаустрофобия - боязнь замкнутых пространств",
            "клоунафобия - боязнь клоунов",
            "книгофобия - боязнь книг",
            "боязнь противоположного пола",
            "боязнь тишины",
            "без фобий",
            "поязнь призраков",
            "боязнь оружия",
            "боязнь поворотов и углов",
            "агорафобия  - боится открытых дверей, открытого пространства, скоплений людей и безлюдных улиц",
            "аэрофобия - боязнь высоты",
            "боязнь цифры 4",
            "библиофобия - боязнь книг"
    };
    private ArrayList<Integer> phobiasHistory = new ArrayList<>();
    public String getPhobia() { return generalStringGetter("phobia"); }


    private String[] characters = new String[] {
            "жизнерадостность",
            "впечатлительность",
            "решительность",
            "самообладание",
            "рассудительность",
            "любознательность",
            "находчивость",
            "честность",
            "альтруизм",
            "ответственность",
            "доброта",
            "справедливость",
            "токсик",
            "буйный",
            "эгоист",
            "социопат",
            "безответсвенность",
            "ленивый",
            "жадность",
            "врун",
            "импульсивный",
            "ребячество",
            "параноик",
            "нытик",
            "трус",
            "деприссивный",
            "грубый",
            "детоненовистник",
            "мразь...",
            "раздражительный",
            "надоедливый",
            "мрачный",
            "сдержаный",
            "наглый",
            "заботливый",
            "талантливый",
            "тщеславный",
            "гурман (без повара не выжевет)",
            "робкий",
            "скептик",
            "культурный",
            "скупой",
            "подлый",
            "упрямы",
            "конфликтный"
    };
    private ArrayList<Integer> charactersHistory = new ArrayList<>();
    public String getCharacter() { return generalStringGetter("character"); }


    private String[] healthiest = new String[] {
            "полностью здоров",
            "полностью здоров",
            "полностью здоров",
            "полностью здоров",
            "полностью здоров",
            "полностью здоров",
            "полностью здоров",
            "крепкое телосложение",
            "крепкое телосложение",
            "крепкое телосложение",
            "ожирение",
            "туберкулёз",
            "слепота",
            "наркомания",
            "алкоголизм",
            "аллергия на солнечный свет",
            "аллергия на воду",
            "аллергия на пыль",
            "сумасшествие",
            "сахарный диабет",
            "рак легких",
            "рак кожи",
            "рак груди",
            "рак мочевого пузыря",
            "рак печени",
            "рак желудка",
            "рак мозга",
            "гастрит",
            "язва",
            "без 1 ноги",
            "без ног",
            "без руки",
            "без рук",
            "да ты прям как \"Ник Вуйчич\" (нету рук и ног)",
            "инвалидность",
            "спид",
            "вич",
            "хламидии",
            "косоглазие",
            "болезнь Альцгеймера",
            "импотенция",
            "игромания",
            "педофилия",
            "коронавирус ",
            "сифилис",
            "лейкоз"
    };
    private ArrayList<Integer> healthiestHistory = new ArrayList<>();
    public String getHealth() { return generalStringGetter("health"); }


    private String[] baggage = new String[] {
            "стандартный набор инструментов",
            "грудной ребёнок",
            "собкачка корги 1 год",
            "кошка \"Гроза мышей\"",
            "ручная мышь",
            "книги по иностранным языкам",
            "лук со стрелами",
            "пистолет с патронами",
            "удочка",
            "одеяло",
            "тетрадь и ручка",
            "компас",
            "радио",
            "утка",
            "топор",
            "мыло",
            "флейта",
            "карта местности (5км)",
            "туалетная бумага",
            "камера",
            "гаечный ключ",
            "большая аптечка",
            "аптечка первой помощи",
            "медицинские маски",
            "шапка-ушанка",
            "книги жестов",
            "фотоаппарат",
            "мини лабораттория",
            "мини электростанция",
            "библия",
            "футляр с очками",
            "автомобиль с полностью залитым баком",
            "саженцы подсолнухов",
            "саженцы пшеницы",
            "саженцы фруктовых деревьев",
            "песочные часы",
            "покер",
            "настольная игра \"манчкин\"",
            "скейт",
            "велосипед",
            "ружьё",
            "автомат",
            "молоток",
            "ноутбук",
            "мачете",
            "надувная лодка",
            "справочкник языка жестов",
            "сборник стихов мояковского",
            "телескоп",
            "спирт",
            "видеокамера",
            "10 пачек сигарет",
            "плеер с музыкой 90-ых"
    };
    private ArrayList<Integer> baggageHistory = new ArrayList<>();
    public String getBaggage() { return generalStringGetter("baggage"); }


    private String[] hobbies = new String[] {
            "кулинария",
            "строительство деревянных домиков",
            "садоводство",
            "брейкданс",
            "паркур",
            "шитьё и вышивание",
            "предпринимательство",
            "аэробика",
            "жонглирование",
            "пение",
            "животные (разведение и уход)",
            "растения (разведение и уход)",
            "стрельба",
            "скалолазание",
            "охота",
            "дрочка",
            "собирание грибов и ягод",
            "дзюдо",
            "концерты (посещение)",
            "психология и тренинги ",
            "гадание на картах",
            "стрельба из лука",
            "граффити",
            "бильярд",
            "Видеомонтаж",
            "программирование",
            "рисование",
            "чинить всё",
            "пейнтбол",
            "чтение книг",
            "плавание",
            "рыболовство",
            "дайвинг",
            "изучение языков",
            "дизайн чего-либо",
            "карате",
            "скейтбординг"
    };
    private ArrayList<Integer> hobbiesHistory = new ArrayList<>();
    public String getHobby() { return generalStringGetter("hobby"); }

    private String[] info = new String[] {
        "копрофил",
        "был судим за износилование",
        "был судим за педофилию",
        "знает 5 языков",
        "чемпион мира по стрельбе из лука",
        "чемпион мира по пейнтболу",
        "резидент камеди клаб",
        "знает все стихи Бродского",
        "10 лет работал сторожем",
        "знает язык жестов",
        "КМС по боксу",
        "читал все книги о зомби",
        "жил на улице 2 года",
        "по 1 образованию ...",
        "изучал очистку воды",
        "атеист",
        "тяжелая рука",
        "закончил(а) медицинский университет",
        "2 года торговал оружием",
        "хорошо пишет рассказы",
        "прочел много книг с рецептами блюд",
        "объездил весь мир",
        "умеет ориентироваться по звездам",
        "хорошо вяжет узлы",
        "мама я смотрю аниме",
        "хорошо ориентируется",
        "проходил курсы психолога",
        "проходил курсы выживания",
        "проходил курсы биологии",
        "приходил курсы садоводства",
        "проходил курсы по самозащите",
        "рос в семье медиков",
        "рос в семье поваров",
        "рос в семье фермеров",
        "рос в семье военных",
        "год назад ограбил банк",
        "недавно ограбил собственного деда",
        "слушает баскова",
        "спец. подготовка по ЧС",
        "глубоко верущий",
        "резидент камеди клаб"
};
    private ArrayList<Integer> infoHistory = new ArrayList<>();
    public String getInfo() { return generalStringGetter("info"); }


    private String[] skills = new String[] {
            "обменять багаж с любым игроком",
            "украсть богаж у любого игрока",
            "украсть хобби у другого игрока",
            "украсть здоровье у другого игрока",
            "сменить себе всё",
            "сменить себе профессию",
            "сменить себе фобию",
            "сменить себе хобби",
            "сменить себе здоровье",
            "сменить себе багаж",
            "изменить профессию любого игрока, кроме себя",
            "изменить фобию любого игрока, кроме себя",
            "изменить хобби любого игрока, кроме себя",
            "изменить здоровье любого игрока, кроме себя",
            "изменить багаж любого игрока, кроме себя",
            "возможность воскресить любого игрока, кроме себя",
            "сменить проффесии всех игроков",
            "сменить профессии всех игроков по часовой",
            "уменьшить бункер на 1",
            "увеличить бункер на 1",
            "рядом есть ещё один бункер, в котором есть 2 плодовитых мужчин",
            "рядом есть ещё один бункер, в котором есть 2 плодовитых женщины",
            "вылечить любого игрока от любых недугов",
            "бункер находится около пресного озера",
            "бункер находится в лесу",
            "карта врага (если человек перед тобой попадает в бункер - ты нет)",
            "карта врага (если человек после тебя попадает в бункер - ты нет)",
            "Карта друга (если человек перед тобой не попадает в бункер - ты тоже)",
            "Карта друга (если человек после тебя не попадает в бункер - ты тоже)",
            "вылечить себя от любых недугов (фобия и здоровье)",
            "вылечить себя от любого недуга (фобия или здоровье)",
            "вылечить любого игрока от любых недугов (фобия и здоровье)",
            "вылечить любого игрока от любого недуга (фобия или здоровье)",
            "дает возможность воскресить любого игрока, кроме себя (с новыми картами)",
            "раскрыть все характеристи любого игрока",
            "раскрыть любую характеристику любого игрока (твой выбор)",
            "раскрыть случайную характеристику любого игрока (его выбор)",
            "защита на 1 ход другого игрока или себя",
            "перегенирировать бункер",
            "изменить свое состояние здоровья и плодовитость на рандомную",
            "вылечить бесплодие любого игрока",
            "омолодить любого игрока на 15 лет если он старше 33",
            "поменяться картой \"состояние здоровья\" с любым игроком"
    };

    private ArrayList<Integer> skillsHistory = new ArrayList<>();
    public String getSkill() { return generalStringGetter("skill"); }

    public boolean getСhildfree() {
        //35% шанс быть чаилдфри
        return rand.nextInt(100) < 35;
    }
}
